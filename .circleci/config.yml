version: 2
jobs:
  build:
    working_directory: ~/Stanford-Online/edx-platform
    parallelism: 4
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      NO_PREREQ_INSTALL: false
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: 'circleci/buildpack-deps:xenial-scm-browsers'
    steps:
    - checkout
    # https://circleci.com/docs/2.0/artifacts/
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
        # Any branch if there are none on the default branch
        - v1-dep-
    # Dependencies
    - run: curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
    - run: sudo apt-get update
    - run: sudo apt-get upgrade
    - run: sudo apt install -y libexpat1
    - run: sudo apt install -y libexpat1-dev
    - run: sudo apt install -y python2.7-dev
    - run: mkdir -p ~/.cache || true
    - run:
        command: |
          if ! [[ -d ~/.cache/apt/archives ]]; then
            sudo apt install -y --download-only libssl-dev libffi-dev python-pip python2.7-dev
            while read package; do
              sudo apt install -y --download-only "${package}" || true
            done <requirements/system/ubuntu/apt-packages.txt
            sudo cp -R /var/cache/apt ~/.cache/
            sudo chown -R ${USER}:${USER} ~/.cache/apt
          fi
    - run: find ~/.cache/apt/archives -name '*.deb' -print0 | xargs -0 sudo dpkg -i
    - run: sudo service mongodb start || true
    - run: npm install eslint-config-edx eslint-config-edx-es5
    - run: test -e ~/.cache/venv/edxapp || virtualenv ~/.cache/venv/edxapp
    - run: echo 'source ~/.cache/venv/edxapp/bin/activate' >> $BASH_ENV
    - run: pip install setuptools
    - run: pip install --exists-action w -r requirements/edx/paver.txt
    - run: pip install --exists-action w -r requirements/edx/pre.txt
    - run: pip install --exists-action w -r requirements/edx/github.txt
    - run: pip install --exists-action w -r requirements/edx/local.txt
    - run: pip install --exists-action w pbr==0.9.0
    - run: pip install --exists-action w -r requirements/edx/base.txt
    - run: pip install --exists-action w -r requirements/edx/paver.txt
    - run: pip install --exists-action w -r requirements/edx/post.txt
    - run: pip install coveralls==1.0
    - run: pip install pylint
    - run: pip install astroid
    - run: pip freeze
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/.cache/apt
        - ~/.cache/pip
        - ~/.cache/venv
        - ./node_modules
    # Test
    - run:
        command: ./scripts/all-tests.sh
        no_output_timeout: 900s
    - run:
        name: mkdir -p $CIRCLE_TEST_REPORTS/junit
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then mkdir -p $CIRCLE_TEST_REPORTS/junit; fi
    - run: if [ $(find reports -type f | wc -l) -gt 0 ] ; then cp -r reports/. $CIRCLE_TEST_REPORTS/junit ; fi
    - run:
        name: if [ -z $COVERALLS_REPO_TOKEN ]; then echo "Coveralls token not defined."; else coveralls; fi
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then if [ -z $COVERALLS_REPO_TOKEN ]; then echo "Coveralls token not defined."; else coveralls; fi; fi
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: reports
    - store_artifacts:
        path: test_root/log
    - store_artifacts:
        path: /tmp/circleci-test-results
